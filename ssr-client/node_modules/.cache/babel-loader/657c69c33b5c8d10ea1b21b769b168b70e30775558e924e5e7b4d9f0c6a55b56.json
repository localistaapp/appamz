{"ast":null,"code":"import { useState, useEffect, memo } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\n// https://usehooks.com/useScript/\nfunction useScript(src) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  var _a = useState(src ? 'loading' : 'idle'),\n    status = _a[0],\n    setStatus = _a[1];\n  useEffect(function () {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus('idle');\n      return;\n    }\n    // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n    var script = document.querySelector(\"script[src=\\\"\" + src + \"\\\"]\");\n    if (!script) {\n      // Create script\n      script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.setAttribute('data-status', 'loading');\n      // Add script to document body\n      document.body.appendChild(script);\n      // Store status in attribute on script\n      // This can be read by other instances of this hook\n      var setAttributeFromEvent = function (event) {\n        !!script && script.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error');\n      };\n      script.addEventListener('load', setAttributeFromEvent);\n      script.addEventListener('error', setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute('data-status') || 'idle');\n    }\n    // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    var setStateFromEvent = function (event) {\n      setStatus(event.type === 'load' ? 'ready' : 'error');\n    };\n    // Add event listeners\n    script.addEventListener('load', setStateFromEvent);\n    script.addEventListener('error', setStateFromEvent);\n    // Remove event listeners on cleanup\n    return function () {\n      if (script) {\n        script.removeEventListener('load', setStateFromEvent);\n        script.removeEventListener('error', setStateFromEvent);\n      }\n    };\n  }, [src]);\n  return status;\n}\nvar scriptFlag = '__googleOneTapScript__';\nvar googleClientScriptURL = 'https://accounts.google.com/gsi/client';\nvar oauthEndpointURL = 'https://oauth2.googleapis.com/tokeninfo?id_token=';\nfunction callback(_a) {\n  var data = _a.data,\n    onError = _a.onError,\n    onSuccess = _a.onSuccess;\n  if (data === null || data === void 0 ? void 0 : data.credential) {\n    fetch(\"\" + oauthEndpointURL + data.credential).then(function (resp) {\n      if ((resp === null || resp === void 0 ? void 0 : resp.status) === 200 && (resp === null || resp === void 0 ? void 0 : resp.json)) {\n        return resp.json();\n      } else {\n        if (onError) {\n          onError();\n        }\n        throw new Error('Something went wrong');\n      }\n    }).then(function (resp) {\n      if (onSuccess) {\n        onSuccess(resp);\n      }\n    }).catch(function (error) {\n      if (onError) {\n        onError(error);\n      }\n      throw error;\n    });\n  }\n}\nfunction useGoogleOneTapLogin(_a) {\n  var onError = _a.onError,\n    disabled = _a.disabled,\n    onSuccess = _a.onSuccess,\n    googleAccountConfigs = _a.googleAccountConfigs,\n    _b = _a.disableCancelOnUnmount,\n    disableCancelOnUnmount = _b === void 0 ? false : _b;\n  var script = useScript(googleClientScriptURL);\n  // Use the user's custom callback if they specified one; otherwise use the default one defined above:\n  var callbackToUse = googleAccountConfigs.callback ? googleAccountConfigs.callback : function (data) {\n    return callback({\n      data: data,\n      onError: onError,\n      onSuccess: onSuccess\n    });\n  };\n  useEffect(function () {\n    if (!(window === null || window === void 0 ? void 0 : window[scriptFlag]) && window.google && script === 'ready') {\n      window.google.accounts.id.initialize(__assign(__assign({}, googleAccountConfigs), {\n        callback: callbackToUse\n      }));\n      window[scriptFlag] = true;\n    }\n    if ((window === null || window === void 0 ? void 0 : window[scriptFlag]) && script === 'ready' && !disabled) {\n      window.google.accounts.id.prompt();\n      return function () {\n        if (!disableCancelOnUnmount) {\n          window.google.accounts.id.cancel();\n        }\n      };\n    }\n  }, [script, window === null || window === void 0 ? void 0 : window[scriptFlag], disabled]);\n  return null;\n}\nfunction GoogleOneTapLogin(_a) {\n  var _b = _a.children,\n    children = _b === void 0 ? null : _b,\n    props = __rest(_a, [\"children\"]);\n  useGoogleOneTapLogin(props);\n  return children;\n}\nvar index = memo(GoogleOneTapLogin);\nexport default index;\nexport { useGoogleOneTapLogin };","map":{"version":3,"names":["useScript","src","_a","useState","status","setStatus","useEffect","script","document","querySelector","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener","scriptFlag","googleClientScriptURL","oauthEndpointURL","callback","data","onError","onSuccess","credential","fetch","then","resp","json","Error","catch","error","useGoogleOneTapLogin","disabled","googleAccountConfigs","_b","disableCancelOnUnmount","callbackToUse","window","google","accounts","id","initialize","__assign","prompt","cancel","GoogleOneTapLogin","children","props","__rest","index","memo"],"sources":["/Users/srishti/Documents/code/appamz/node_modules/react-google-one-tap-login/src/useScript.ts","/Users/srishti/Documents/code/appamz/node_modules/react-google-one-tap-login/src/useGoogleOneTapLogin.ts","/Users/srishti/Documents/code/appamz/node_modules/react-google-one-tap-login/src/index.ts"],"sourcesContent":["// https://usehooks.com/useScript/\nimport { useState, useEffect } from 'react';\n\nexport default function useScript(src: string): string {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState<string>(src ? 'loading' : 'idle');\n\n  useEffect(\n    () => {\n      // Allow falsy src value if waiting on other data needed for\n      // constructing the script URL passed to this hook.\n      if (!src) {\n        setStatus('idle');\n        return;\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another intance of this hook\n      let script: HTMLScriptElement | null = document.querySelector(\n        `script[src=\"${src}\"]`,\n      );\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script');\n        script.src = src;\n        script.async = true;\n        script.setAttribute('data-status', 'loading');\n        // Add script to document body\n        document.body.appendChild(script);\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          !!script &&\n            script.setAttribute(\n              'data-status',\n              event.type === 'load' ? 'ready' : 'error',\n            );\n        };\n\n        script.addEventListener('load', setAttributeFromEvent);\n        script.addEventListener('error', setAttributeFromEvent);\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') || 'idle');\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error');\n      };\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent);\n      script.addEventListener('error', setStateFromEvent);\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent);\n          script.removeEventListener('error', setStateFromEvent);\n        }\n      };\n    },\n    [src], // Only re-run effect if script src changes\n  );\n\n  return status;\n}\n","import { useEffect } from 'react';\nimport {\n  IUseGoogleOneTapLogin,\n  IGoogleCallbackResponse,\n  IGoogleEndPointResponse,\n} from './types';\nimport useScript from './useScript';\n\nconst scriptFlag: string = '__googleOneTapScript__';\nconst googleClientScriptURL: string = 'https://accounts.google.com/gsi/client';\nconst oauthEndpointURL: string =\n  'https://oauth2.googleapis.com/tokeninfo?id_token=';\n\nfunction callback({\n  data,\n  onError,\n  onSuccess,\n}: {\n  data: IGoogleCallbackResponse;\n  onError?: IUseGoogleOneTapLogin['onError'];\n  onSuccess?: IUseGoogleOneTapLogin['onSuccess'];\n}) {\n  if (data?.credential) {\n    fetch(`${oauthEndpointURL}${data.credential}`)\n      .then((resp) => {\n        if (resp?.status === 200 && resp?.json) {\n          return resp.json();\n        } else {\n          if (onError) {\n            onError();\n          }\n          throw new Error('Something went wrong');\n        }\n      })\n      .then((resp: IGoogleEndPointResponse) => {\n        if (onSuccess) {\n          onSuccess(resp);\n        }\n      })\n      .catch((error) => {\n        if (onError) {\n          onError(error);\n        }\n        throw error;\n      });\n  }\n}\n\nexport function useGoogleOneTapLogin({\n  onError,\n  disabled,\n  onSuccess,\n  googleAccountConfigs,\n  disableCancelOnUnmount = false,\n}: IUseGoogleOneTapLogin) {\n  const script = useScript(googleClientScriptURL);\n  // Use the user's custom callback if they specified one; otherwise use the default one defined above:\n  const callbackToUse = googleAccountConfigs.callback\n    ? googleAccountConfigs.callback\n    : (data: IGoogleCallbackResponse) => callback({ data, onError, onSuccess });\n\n  useEffect(() => {\n    if (!window?.[scriptFlag] && window.google && script === 'ready') {\n      window.google.accounts.id.initialize({\n        ...googleAccountConfigs,\n        callback: callbackToUse,\n      });\n      window[scriptFlag] = true;\n    }\n    if (window?.[scriptFlag] && script === 'ready' && !disabled) {\n      window.google.accounts.id.prompt();\n\n      return () => {\n        if (!disableCancelOnUnmount) {\n          window.google.accounts.id.cancel();\n        }\n      };\n    }\n  }, [script, window?.[scriptFlag], disabled]);\n\n  return null;\n}\n","import { memo } from 'react';\nimport { IGoogleOneTapLogin } from './types';\nimport { useGoogleOneTapLogin } from './useGoogleOneTapLogin';\n\nfunction GoogleOneTapLogin({ children = null, ...props }: IGoogleOneTapLogin) {\n  useGoogleOneTapLogin(props);\n  return children;\n}\n\nexport default memo(GoogleOneTapLogin);\n\nexport { useGoogleOneTapLogin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}