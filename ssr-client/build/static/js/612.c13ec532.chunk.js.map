{"version":3,"file":"static/js/612.c13ec532.chunk.js","mappings":"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","sources":["store/mainview/notifications/Notifications.js"],"sourcesContent":["import { useState, createRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./Notifications.css\";\n\nconst Notifications = ({url}) => {\n    const [festiveList, setFestiveList] = useState(\"\");\n\n    const loadFestiveNotifications = async () => {\n        let businessType = JSON.parse(window.sessionStorage.getItem('user-profile')).businessType;\n        let festiveArr = [];\n        let month = new Date().getMonth() + 1;\n        let day = new Date().getDate();\n        axios.get(`/notif-config/${businessType}`)\n            .then(function (response) {\n                if(response.data != 'auth error') {\n                    console.log('--res--', JSON.stringify(response.data));\n                    \n\n                    response.data.forEach(item => {\n                        let d = item.date;\n                        let notifMonth = parseInt(d.split('-')[0],10);\n                        let notifDay = parseInt(d.split('-')[1],10);\n                        if (month <= notifMonth && day <= notifDay) {\n                            festiveArr.push(item);\n                        }\n                    });\n\n\n                    setFestiveList(festiveArr);\n                }\n            }.bind(this));\n    }\n\n    const sendNotif = () => {\n        const title = document.querySelector('#pTitle').value;\n        const description = document.querySelector('#pDesc').value;\n        const storeId = JSON.parse(window.sessionStorage.getItem('user-profile')).storeId;\n\n        console.log('--title--', title);\n        console.log('--description--', description);\n        \n        axios.post(`/push-notif`, {title: title, \n            description: description,\n            storeId: storeId}).then((response) => {\n            setTimeout(()=>{window.location.reload();},500);\n        });       \n    }\n\n    useEffect(() => {\n        const tabs = document.getElementById('notif-tabs');\n        const tabElements = document.querySelectorAll('.notif-tab');\n\n        tabElements.forEach(tab => {\n            tab.addEventListener('click', () => {\n                tabElements.forEach(t => t.classList.remove('active'));\n                tab.classList.add('active');\n            });\n        });\n\n        loadFestiveNotifications();\n    }, []);\n\n    return (\n        <div className=\"main\">\n           <div class=\"container\">\n                <h1>Notifications</h1>\n                <div class=\"notif-tabs-container\">\n                    <div class=\"notif-tabs\" id=\"notif-tabs\">\n                        <div class=\"notif-tab active\">Festive</div>\n                        <div class=\"notif-tab\">Content</div>\n                        <div class=\"notif-tab\">Events</div>\n                    </div>\n                </div>\n\n                <div className=\"festive\">\n                {festiveList.length > 0 && festiveList.map((item, index) => { \n                    return (\n                    <div className=\"notif-item\">\n                        <div className=\"notif-item-title\">{item.title}</div>\n                        <div className=\"notif-item-desc\">{item.description}</div>\n                        <div className=\"notif-item-due\">Due by {item.date}</div>\n                    </div>)\n                })}\n                </div>\n                \n                <div className=\"new-notif\">\n                    <input id=\"pTitle\" type=\"text\" placeholder=\"Title\" />\n                    <textarea id=\"pDesc\" placeholder=\"Description\"></textarea>\n                </div>\n            </div>\n\n            <div class=\"footer-buttons\">\n                <button onClick={sendNotif}><span>Send</span><i class=\"fas fa-arrow-right\"></i></button>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n"],"names":["_ref","url","festiveList","setFestiveList","useState","useEffect","document","getElementById","tabElements","querySelectorAll","forEach","tab","addEventListener","t","classList","remove","add","async","businessType","JSON","parse","window","sessionStorage","getItem","festiveArr","month","Date","getMonth","day","getDate","axios","concat","then","response","data","console","log","stringify","item","d","date","notifMonth","parseInt","split","notifDay","push","bind","loadFestiveNotifications","_jsxs","className","children","class","_jsx","id","length","map","index","title","description","type","placeholder","onClick","sendNotif","querySelector","value","storeId","setTimeout","location","reload"],"sourceRoot":""}