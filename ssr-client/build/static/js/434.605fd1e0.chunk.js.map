{"version":3,"file":"static/js/434.605fd1e0.chunk.js","mappings":"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","sources":["store/mainview/stats/Stats.js"],"sourcesContent":["import { useState, createRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./Stats.css\";\n\n\nconst RepeatFunnel = ({ data }) => {\n  const qr = data.QR_VISITS || 0;\n  const direct = data.DIRECT_VISITS || 0;\n  const qrDirect = qr + direct;\n\n  const funnelData = [\n    { label: \"QR + Direct Visits\", value: qrDirect, breakdown: { qr, direct } },\n    { label: \"Deals Claimed\", value: data.DEALS_CLAIMED || 0 },\n    { label: \"Repeat Visits\", value: data.REPEAT_VISITS || 0 },\n  ];\n\n  const maxValue = Math.max(...funnelData.map((d) => d.value));\n\n  return (\n    <div className=\"funnel\">\n      {funnelData.map((step, idx) => {\n        const widthPercent = maxValue > 0 ? (step.value / maxValue) * 100 : 0;\n\n        // Choose color\n        let bg = \"#4caf50\"; // green\n        if (widthPercent < 70 && widthPercent >= 40) bg = \"#fbc02d\"; // yellow\n        if (widthPercent < 40) bg = \"#fb8c00\"; // amber\n\n        return (\n          <div key={idx} className=\"funnel-row\">\n            <div className=\"funnel-bar-wrapper\">\n              {step.breakdown ? (\n                <div\n                  className=\"funnel-bar stacked\"\n                  style={{\n                    width: `${widthPercent}%`,\n                  }}\n                >\n                  <div\n                    className=\"bar-qr\"\n                    style={{\n                      flex: step.breakdown.qr,\n                    }}\n                  ></div>\n                  <div\n                    className=\"bar-direct\"\n                    style={{\n                      flex: step.breakdown.direct,\n                    }}\n                  ></div>\n                </div>\n              ) : (\n                <div\n                  className=\"funnel-bar\"\n                  style={{\n                    width: `${widthPercent}%`,\n                    background: bg,\n                  }}\n                ></div>\n              )}\n            </div>\n            <div className=\"funnel-label\">\n              {step.label} — <strong>{step.value}</strong>\n              {step.breakdown && (\n                <span className=\"breakdown\">\n                  {\" \"}\n                  (QR: {step.breakdown.qr}, Direct: {step.breakdown.direct})\n                </span>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst ReferralFunnel = ({ data }) => {\n  \n    const funnelData = [\n      { label: \"Shares\", value: data.SHARES || 0},\n      { label: \"Share Visits\", value: data.SHARE_VISITS || 0 },\n      { label: \"Deals Claimed\", value: data.SHARE_DEALS_CLAIMED || 0 },\n    ];\n  \n    const maxValue = Math.max(...funnelData.map((d) => d.value));\n  \n    return (\n      <div className=\"funnel\">\n        {funnelData.map((step, idx) => {\n          const widthPercent = maxValue > 0 ? (step.value / maxValue) * 100 : 0;\n  \n          // Choose color\n          let bg = \"#4caf50\"; // green\n          if (widthPercent < 70 && widthPercent >= 40) bg = \"#fbc02d\"; // yellow\n          if (widthPercent < 40) bg = \"#fb8c00\"; // amber\n  \n          return (\n            <div key={idx} className=\"funnel-row\">\n              <div className=\"funnel-bar-wrapper\">\n                {step.breakdown ? (\n                  <div\n                    className=\"funnel-bar stacked\"\n                    style={{\n                      width: `${widthPercent}%`,\n                    }}\n                  >\n                    <div\n                      className=\"bar-qr\"\n                      style={{\n                        flex: step.breakdown.qr,\n                      }}\n                    ></div>\n                    <div\n                      className=\"bar-direct\"\n                      style={{\n                        flex: step.breakdown.direct,\n                      }}\n                    ></div>\n                  </div>\n                ) : (\n                  <div\n                    className=\"funnel-bar\"\n                    style={{\n                      width: `${widthPercent}%`,\n                      background: bg,\n                    }}\n                  ></div>\n                )}\n              </div>\n              <div className=\"funnel-label\">\n                {step.label} — <strong>{step.value}</strong>\n                {step.breakdown && (\n                  <span className=\"breakdown\">\n                    {\" \"}\n                    (QR: {step.breakdown.qr}, Direct: {step.breakdown.direct})\n                  </span>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const OnlineFunnel = ({ data }) => {\n  \n    const enquiries = data.ENQUIRIES || 0;\n    const basketAdd = data.BASKET_ADD || 0;\n    const enquiriesAdd = enquiries + basketAdd;\n\n    const funnelData = [\n        { label: \"Store Browse\", value: data.STORE_BROWSE || 0 },\n        { label: \"Enquiries + Basket Adds\", value: enquiriesAdd, breakdown: { enquiries, basketAdd } },\n        { label: \"Re-order\", value: data.RE_ORDER || 0 },\n    ];\n    const maxValue = Math.max(...funnelData.map((d) => d.value));\n  \n    return (\n      <div className=\"funnel\">\n        {funnelData.map((step, idx) => {\n          const widthPercent = maxValue > 0 ? (step.value / maxValue) * 100 : 0;\n  \n          // Choose color\n          let bg = \"#4caf50\"; // green\n          if (widthPercent < 70 && widthPercent >= 40) bg = \"#fbc02d\"; // yellow\n          if (widthPercent < 40) bg = \"#fb8c00\"; // amber\n  \n          return (\n            <div key={idx} className=\"funnel-row\">\n              <div className=\"funnel-bar-wrapper\">\n                {step.breakdown ? (\n                  <div\n                    className=\"funnel-bar stacked\"\n                    style={{\n                      width: `${widthPercent}%`,\n                    }}\n                  >\n                    <div\n                      className=\"bar-qr\"\n                      style={{\n                        flex: step.breakdown.enquiries,\n                      }}\n                    ></div>\n                    <div\n                      className=\"bar-direct\"\n                      style={{\n                        flex: step.breakdown.basketAdd,\n                      }}\n                    ></div>\n                  </div>\n                ) : (\n                  <div\n                    className=\"funnel-bar\"\n                    style={{\n                      width: `${widthPercent}%`,\n                      background: bg,\n                    }}\n                  ></div>\n                )}\n              </div>\n              <div className=\"funnel-label\">\n                {step.label} — <strong>{step.value}</strong>\n                {step.breakdown && (\n                  <span className=\"breakdown\">\n                    {\" \"}\n                    (Enquiries: {step.breakdown.enquiries}, Basket Adds: {step.breakdown.basketAdd})\n                  </span>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n\n\nconst Stats = ({url}) => {\n    const [qrVisits, setQRVists] = useState(0);\n    const [directsVisits, setDirectsVisits] = useState(0);\n    const [dealsClaimed, setDealsClaimed] = useState(0);\n    const [repeatVisits, setRepeatVisits] = useState(0);\n    const [activeTab, setActiveTab] = useState('repeat');\n    const [funnelData, setFunnelData] = useState(null);\n\n    const loadStats = async (type) => {\n        let storeId = JSON.parse(window.sessionStorage.getItem('user-profile')).storeId;\n        axios.get(`/store-stats/${storeId}/${type.toUpperCase()}`)\n            .then(function (response) {\n                if(response.data != 'auth error') {\n                    console.log('--res--', JSON.stringify(response.data));\n                    const result = response.data.reduce((acc, item) => {\n                        acc[item.metric] = Number(item.value); // convert string to number\n                        return acc;\n                      }, {});\n                      \n                    setFunnelData(result);\n                    setQRVists(result['QR_VISITS']);\n                    setDirectsVisits(result['DIRECT_VISITS']);\n                    setDealsClaimed(result['DEALS_CLAIMED']);\n                    setRepeatVisits(result['REPEAT_VISITS']);\n                }\n            }.bind(this));\n    }\n\n    useEffect(() => {\n        const tabs = document.getElementById('notif-tabs');\n        const tabElements = document.querySelectorAll('.notif-tab');\n\n        tabElements.forEach(tab => {\n            tab.addEventListener('click', () => {\n                tabElements.forEach(t => t.classList.remove('active'));\n                tab.classList.add('active');\n            });\n        });\n\n        loadStats('repeat');\n    }, []);\n\n    return (\n        <div className=\"main\">\n           <div class=\"stats-container\">\n                <h1>Stats</h1>\n                <div class=\"notif-tabs-container\">\n                    <div class=\"notif-tabs\" id=\"notif-tabs\">\n                        <div onClick={()=>{setActiveTab('repeat');loadStats('repeat');}} className={`notif-tab ${activeTab == 'repeat' ? 'active' : ''}`}>Repeat</div>\n                        <div onClick={()=>{setActiveTab('referral');loadStats('referral');}} className={`notif-tab ${activeTab == 'referral' ? 'active' : ''}`}>Referral</div>\n                        <div onClick={()=>{setActiveTab('online');loadStats('online');}} className={`notif-tab ${activeTab == 'online' ? 'active' : ''}`}>Reorder</div>\n                    </div>\n                </div>\n                \n                {funnelData != null && activeTab == \"repeat\" && <><div className=\"funnel-headline\">\n                        Repeat visitor funnel:\n                    </div>\n                    <RepeatFunnel data={funnelData} />\n                    </>\n                }\n                {funnelData != null && activeTab == \"referral\" && <><div className=\"funnel-headline\">\n                        Referral visitor funnel:\n                    </div>\n                    <ReferralFunnel data={funnelData} />\n                    </>\n                }\n                {funnelData != null && activeTab == \"online\" && <><div className=\"funnel-headline\">\n                        Online reordering funnel:\n                    </div>\n                    <OnlineFunnel data={funnelData} />\n                    </>\n                }\n                \n            </div>\n\n        </div>\n    );\n}\n\nexport default Stats;\n"],"names":["RepeatFunnel","_ref","data","qr","QR_VISITS","direct","DIRECT_VISITS","funnelData","label","value","breakdown","DEALS_CLAIMED","REPEAT_VISITS","maxValue","Math","max","map","d","_jsx","className","children","step","idx","widthPercent","bg","_jsxs","style","width","concat","flex","background","ReferralFunnel","_ref2","SHARES","SHARE_VISITS","SHARE_DEALS_CLAIMED","OnlineFunnel","_ref3","enquiries","ENQUIRIES","basketAdd","BASKET_ADD","enquiriesAdd","STORE_BROWSE","RE_ORDER","_ref4","url","qrVisits","setQRVists","useState","directsVisits","setDirectsVisits","dealsClaimed","setDealsClaimed","repeatVisits","setRepeatVisits","activeTab","setActiveTab","setFunnelData","loadStats","async","storeId","JSON","parse","window","sessionStorage","getItem","axios","type","toUpperCase","then","response","console","log","stringify","result","reduce","acc","item","metric","Number","bind","useEffect","document","getElementById","tabElements","querySelectorAll","forEach","tab","addEventListener","t","classList","remove","add","class","id","onClick","_Fragment"],"sourceRoot":""}