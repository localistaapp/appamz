{"version":3,"file":"static/js/65.e2d9e62d.chunk.js","mappings":"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","sources":["store/mainview/viewproducts/ViewProducts.js"],"sourcesContent":["import { useState, createRef, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./ViewProducts.css\";\n\nconst ProductList = ({products}) => {\n  \n    return (\n      <div className=\"product-list\">\n        {products.map((p, index) => {\n          const originalPrice = Math.round(p.price * 1.2);\n  \n          return (\n            <div key={index} className=\"card\">\n              <img src={p.image_url} alt={p.title} />\n              <div className=\"card-content\">\n                <div className=\"highlights\">{p.highlights}</div>\n                <div className=\"description\">{p.description}</div>\n                <div className=\"price\">\n                  <div className=\"price-current\">₹{p.price}</div>\n                  <div className=\"price-original\">₹{originalPrice}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const isLeaf = (val) =>\n  Array.isArray(val) || typeof val !== 'object' || val === null;\n\nconst NestedTabs = (categories) => {\n  const [selectedKeys, setSelectedKeys] = useState({}); \n\n  useEffect(()=> {\n    handleSelect(0, 'categories');\n  },[]);\n  // Traverse using selectedKeys to build visible levels\n  //ToDo: Check here\n  const buildLevels = (data, keys) => {\n    const levels = [];\n    let current = data;\n\n    while (current && typeof current === 'object') {\n      const levelKeys = Object.keys(current);\n      levels.push({ data: current, keys: levelKeys });\n\n      const selectedKey = keys[levels.length - 1];\n      if (selectedKey && current[selectedKey]) {\n        current = current[selectedKey];\n      } else {\n        break;\n      }\n    }\n\n    return levels;\n  };\n\n  const levels = buildLevels(categories, Object.values(selectedKeys));\n  \n  const handleSelect = (levelIndex, key) => {\n    debugger;\n    if (key !== 'categories') {\n        console.log('--levelIndex--', levelIndex);\n        \n        window.filterStr = typeof window.filterStr == 'undefined' ? key : window.filterStr+','+key;\n\n        if (levelIndex < window.filterStr.split(',').length) {\n            let arr = window.filterStr.split(',');\n            arr.splice(levelIndex-1, 0, key);\n            arr.length = levelIndex;\n            window.filterStr = arr.toString();\n        } \n            console.log('--filterStr--', window.filterStr);\n        \n        \n        window.onFilter(key, window.filterStr);\n    }\n    setSelectedKeys((prev) => {\n      const updated = { ...prev };\n      updated[levelIndex] = key;\n      // Clear deeper levels\n      Object.keys(updated)\n        .filter((k) => parseInt(k) > levelIndex)\n        .forEach((k) => delete updated[k]);\n      return updated;\n    });\n  };\n\n  return (\n    <div>\n      {levels.map((level, index) => {\n        window.scrollTo(0,index*55);\n        if (index > 0) {\n            return <div key={index}>\n            <div className=\"tabs\">\n                {/* check type - something like ..if level.keys is object vs array  */}\n              {\n              level.keys.map((key) => {\n                    if (key.match(/^\\d+$/)) {\n                        return null\n                    } else {\n                        \n                        return (\n                            <div\n                            className={`tab ${\n                                selectedKeys[index] === key ? 'active' : ''\n                            }`}\n                            key={key}\n                            onClick={() => handleSelect(index, key)}\n                            >\n                            {key}\n                            </div>);\n                    }\n                \n                })}\n            </div>\n          </div>\n        } else {\n            return <div></div>\n        }\n        \n    })}\n\n     \n    </div>\n  );\n};\n  \n\n\nconst ViewProducts = ({url}) => {\n\n    const [message, setMessage] = useState(\"\");\n    const [products, setProducts] = useState([]);\n    const [origProducts, setOrigProducts] = useState([]);\n    const [categories, setCategories] = useState({});\n    /*const categories = {\n        \"mens\": {\"shirts\" : { \"formals\": {\"xl\": [\"black\", \"white\", \"beige\"]}, \"casuals\": { \"T-shirt\": {\"m\": [\"black\", \"white\"], \"l\": [\"black\", \"white\"]} }}},\n        \"womens\": {\"tops\" : { \"casuals\": {\"s\": [\"black\", \"white\", \"beige\"]}, \"casuals\": { \"T-shirt\": {\"m\": [\"black\", \"white\"], \"l\": [\"black\", \"white\"]} }}, \"dresses\": { \"lehengas\": {\"s\": [\"black\", \"white\", \"beige\"]}, \"casuals\": { \"salwar\": {\"m\": [\"black\", \"white\"], \"l\": [\"black\", \"white\"]} }}}\n    };*/\n    \n    let storeId = 0;\n    try {\n        storeId = JSON.parse(window.sessionStorage.getItem('user-profile')).storeId;\n    } catch(e) {\n        console.log('error');\n    }\n      \n\n      if (products.length == 0) {\n        axios.get(`/products/${storeId}`)\n        .then(function (response) {\n          if(response.data != 'auth error') {\n              console.log('--product res--', JSON.stringify(response.data));\n              setProducts(response.data);\n              setOrigProducts(response.data);\n              let productsData = response.data;\n\n              let tabMap = {};\n              productsData.forEach(product => {\n                const highlights = product.highlights.split(',').map(h => h.trim());\n                let current = tabMap;\n              \n                highlights.forEach((level, index) => {\n                  if (index === highlights.length - 1) {\n                    // Final level - assign 0\n                    current[level] = 0;\n                  } else {\n                    // Intermediate level - go deeper\n                    if (!current[level]) {\n                      current[level] = {};\n                    }\n                    current = current[level];\n                  }\n                });\n              });\n            setCategories(tabMap);\n            console.log('tabMap:', tabMap);\n          }\n        }.bind(this));\n      }\n\n    window.onFilter = (selected, filters) => {\n        console.log('-selected-', selected);\n        console.log('-filters-'+ filters+'-');\n        let filterPattern =filters;\n        const newArr = origProducts.filter((product) => product.highlights.trim().indexOf(filterPattern.trim()) >= 0);\n        console.log('--newArr--', newArr);\n        setProducts(newArr);\n      }\n    \n    return (\n        <div className=\"main\">\n           <div class=\"container\">\n                <h1 style={{marginLeft: '16px'}}>View Products</h1>\n                <div class=\"tabs-container\">\n                    <div class=\"tabs\" id=\"main-tabs\">\n                    <div class=\"tab active\">All</div>\n                    <div class=\"tab\">Season's Special</div>\n                    <div class=\"tab\">New Arrivals</div>\n                    </div>\n                    <div class=\"sub-tabs\" id=\"sub-tabs\" style={{marginBottom: '0',marginTop: '-16px'}}>\n                    <NestedTabs categories={categories} />\n                    </div>\n                </div>\n                <ProductList products={products} />\n            </div>\n        </div>\n    );\n}\n\nexport default ViewProducts;\n"],"names":["ProductList","_ref","products","_jsx","className","children","map","p","index","originalPrice","Math","round","price","_jsxs","src","image_url","alt","title","highlights","description","NestedTabs","categories","selectedKeys","setSelectedKeys","useState","useEffect","handleSelect","levels","buildLevels","data","keys","current","levelKeys","Object","push","selectedKey","length","values","levelIndex","key","console","log","window","filterStr","split","arr","splice","toString","onFilter","prev","updated","filter","k","parseInt","forEach","level","scrollTo","match","concat","onClick","_ref2","url","message","setMessage","setProducts","origProducts","setOrigProducts","setCategories","storeId","JSON","parse","sessionStorage","getItem","e","axios","then","response","stringify","productsData","tabMap","product","h","trim","bind","selected","filters","filterPattern","newArr","indexOf","class","style","marginLeft","id","marginBottom","marginTop"],"sourceRoot":""}