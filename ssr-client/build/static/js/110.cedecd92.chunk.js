"use strict";(self.webpackChunkssr_client=self.webpackChunkssr_client||[]).push([[110],{4110:(e,r,s)=>{s.d(r,{Dx:()=>v,Se:()=>y,cR:()=>m,eb:()=>g,rK:()=>h});var t=s(9643),a={message:"Missing file parameter for upload"},n={message:"Missing fileName parameter for upload"},o={message:"Missing public key for upload"},i={message:"Request to ImageKit upload endpoint failed due to network error"},l={message:"Missing signature for upload. The SDK expects token, signature and expire for authentication."},u={message:"Missing token for upload. The SDK expects token, signature and expire for authentication."},p={message:"Missing expire for upload. The SDK expects token, signature and expire for authentication."},d={message:"Invalid transformation parameter. Please include at least pre, post, or both."},f={message:"Invalid pre transformation parameter."},c={message:"Invalid post transformation parameter."};class m extends Error{constructor(e,r){super(e),this.$ResponseMetadata=void 0,this.name="ImageKitInvalidRequestError",this.$ResponseMetadata=r}}class g extends Error{constructor(e,r){super(e),this.reason=void 0,this.name="ImageKitAbortError",this.reason=r}}class h extends Error{constructor(e){super(e),this.name="ImageKitUploadNetworkError"}}class v extends Error{constructor(e,r){super(e),this.$ResponseMetadata=void 0,this.name="ImageKitServerError",this.$ResponseMetadata=r}}const y=e=>e?new Promise(((r,s)=>{const{xhr:t}=e||{};delete e.xhr;const y=t||new XMLHttpRequest;if(!e.file)return s(new m(a.message));if(!e.fileName)return s(new m(n.message));if(!e.publicKey||0===e.publicKey.length)return s(new m(o.message));if(!e.token)return s(new m(u.message));if(!e.signature)return s(new m(l.message));if(!e.expire)return s(new m(p.message));if(e.transformation){if(!Object.keys(e.transformation).includes("pre")&&!Object.keys(e.transformation).includes("post"))return s(new m(d.message));if(Object.keys(e.transformation).includes("pre")&&!e.transformation.pre)return s(new m(f.message));if(Object.keys(e.transformation).includes("post")){if(!Array.isArray(e.transformation.post))return s(new m(c.message));for(let r of e.transformation.post){if("abs"===r.type&&!r.protocol&&!r.value)return s(new m(c.message));if("transformation"===r.type&&!r.value)return s(new m(c.message))}}}var x=new FormData;let S;for(S in e)if(S)if("file"===S&&"string"!=typeof e.file)x.set("file",e.file,String(e.fileName));else if("tags"===S&&Array.isArray(e.tags))x.set("tags",e.tags.join(","));else if("signature"===S)x.set("signature",e.signature);else if("expire"===S)x.set("expire",String(e.expire));else if("token"===S)x.set("token",e.token);else if("responseFields"===S&&Array.isArray(e.responseFields))x.set("responseFields",e.responseFields.join(","));else if("extensions"===S&&Array.isArray(e.extensions))x.set("extensions",JSON.stringify(e.extensions));else if("customMetadata"!==S||"object"!==typeof e.customMetadata||Array.isArray(e.customMetadata)||null===e.customMetadata){if("transformation"===S&&"object"===typeof e.transformation&&null!==e.transformation)x.set(S,JSON.stringify(e.transformation));else if("checks"===S&&e.checks)x.set("checks",e.checks);else if(void 0!==e[S]){if(["onProgress","abortSignal"].includes(S))continue;x.set(S,String(e[S]))}}else x.set("customMetadata",JSON.stringify(e.customMetadata));function k(){var r;return y.abort(),s(new g("Upload aborted",null===(r=e.abortSignal)||void 0===r?void 0:r.reason))}if(e.onProgress&&(y.upload.onprogress=function(r){e.onProgress&&e.onProgress(r)}),e.abortSignal){var M;if(e.abortSignal.aborted)return s(new g("Upload aborted",null===(M=e.abortSignal)||void 0===M?void 0:M.reason));e.abortSignal.addEventListener("abort",k),y.addEventListener("loadend",(()=>{e.abortSignal&&e.abortSignal.removeEventListener("abort",k)}))}y.open("POST","https://upload.imagekit.io/api/v1/files/upload"),y.onerror=function(e){return s(new h(i.message))},y.onload=function(){if(y.status>=200&&y.status<300)try{var e=JSON.parse(y.responseText),t=b(e,y);return r(t)}catch(o){return s(o)}else if(y.status>=400&&y.status<500)try{var a;e=JSON.parse(y.responseText);return s(new m(null!==(a=e.message)&&void 0!==a?a:"Invalid request. Please check the parameters.",w(y)))}catch(o){return s(o)}else try{var n;e=JSON.parse(y.responseText);return s(new v(null!==(n=e.message)&&void 0!==n?n:"Server error occurred while uploading the file. This is rare and usually temporary.",w(y)))}catch(o){return s(new v("Server error occurred while uploading the file. This is rare and usually temporary.",w(y)))}},y.send(x)})):Promise.reject(new m("Invalid options provided for upload")),b=(e,r)=>{let s={...e};const t=w(r);return Object.defineProperty(s,"$ResponseMetadata",{value:t,enumerable:!1,writable:!1}),s},w=e=>{const r=function(e){const r={},s=e.getAllResponseHeaders();Object.keys(s).length&&s.trim().split(/[\r\n]+/).map((e=>e.split(/: /))).forEach((e=>{r[e[0].trim().toLowerCase()]=e[1].trim()}));return r}(e);return{statusCode:e.status,headers:r,requestId:r["x-request-id"]}};"function"===typeof SuppressedError&&SuppressedError;(0,t.createContext)({})}}]);
//# sourceMappingURL=110.cedecd92.chunk.js.map